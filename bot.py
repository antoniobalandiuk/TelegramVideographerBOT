import asyncio

from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.exceptions import MessageNotModified
from config import TOKEN

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

keyboard = InlineKeyboardMarkup()
services = InlineKeyboardButton(text='–í–∏–¥–∏ –ø–æ—Å–ª—É–≥ üìã', callback_data="services")
price = InlineKeyboardButton(text='–ü—Ä–∞–π—Å-–ª–∏—Å—Ç üíµ', callback_data="price")
contacts = InlineKeyboardButton(text='–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ñ –¥–∞–Ω—ñ üë•', callback_data="contacts")
special_offers = InlineKeyboardButton(text='–û—Å–æ–±–ª–∏–≤—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó ü§ù', callback_data="special_offers")
reviews = InlineKeyboardButton(text='–í—ñ–¥–≥—É–∫–∏ üó£', callback_data="reviews")
keyboard.add(services, price, contacts, special_offers, reviews)


@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    await message.reply(f'–ü—Ä–∏–≤—ñ—Ç! –Ø - –≤—ñ–¥–µ–æ–º–µ–π–∫–µ—Ä –∑ –ø–æ—á—É—Ç—Ç—è–º —Å—Ç–∏–ª—é!üéûüé•\n\n'
                        f'–Ø ‚Äì –ê–Ω–∞—Ç–æ–ª—ñ–π –†—É–∂–∏—Ü—å–∫–∏–π, –º–µ–Ω—ñ 16 —Ä–æ–∫—ñ–≤üë¶. \"16?! –¢–∞ —Ç–∏ –æ–±–º–∞–Ω—é—î—à!\" - —á–∞—Å—Ç–æ —á—É—é —Ç–∞–∫—ñ —Ä–µ–∞–∫—Ü—ñ—ó –∑ –±–æ–∫—É —Å–≤–æ—ó—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤, —è–∫—ñ –≤–ø–æ–¥–∞–ª—å—à–æ–º—É –≥–æ–≤–æ—Ä—è—Ç—å: \"–í—ñ—Ä–Ω–∏–π —Å–≤–æ—ó–π —Å–ø—Ä–∞–≤—ñ, –≤—ñ—Ä–Ω–∏–π —Å–≤–æ—ó–º –ø–µ—Ä–µ–∫–æ–Ω–∞–Ω–Ω—è–º, –±–æ–º–±–µ–∑–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä, –≤ —è–∫–æ–≥–æ –≤—Å–µ —â–µ –ø–æ–ø–µ—Ä–µ–¥—É!\n\n'
                        f'–ú–æ—è —Ä–æ–±–æ—Ç–∞ ‚Äî —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ø—Ä–∏—î–º–Ω—ñ —Å–ø–æ–≥–∞–¥–∏, –≤—ñ–¥—Ç–≤–æ—Ä–∏—Ç–∏ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –ø–æ–¥—ñ–π –Ω–∞ –ø—Ä–∏—Ä–æ–¥—ñüõ§, —É –º—ñ—Å—Ç—ñüåá —á–∏ —Å—Ç—É–¥—ñ—óüéº, –∑–∞–ø–∞–º`—è—Ç–∞—Ç–∏ —É—Å—ñ –µ–º–æ—Ü—ñ—ó –≤ –∫–∞–¥—Ä–∞—Ö.',
                        reply_markup=keyboard)


@dp.callback_query_handler(text_contains='services')
async def services(call: types.CallbackQuery):
    await call.message.edit_text(f'–¢—É—Ç –±—É–¥—É—Ç—å –ø–æ—Å–ª—É–≥–∏, –º–æ–¥–µ–ª—ñ –∫–∞–º–µ—Ä —Ç–∞ –¥—Ä–æ–Ω—É', reply_markup=keyboard)


@dp.callback_query_handler(text_contains='price')
async def price(call: types.CallbackQuery):
    await call.message.edit_text(f'üé¨  –ö–ª—ñ–ø–∏ - –≤—ñ–¥ 200üí≤\n\n'
                                 f'üëó  Fashion - –≤—ñ–¥ 100üí≤\n\n'
                                 f'üì¢  –†–µ–∫–ª–∞–º–Ω—ñ –≤—ñ–¥–µ–æ - –≤—ñ–¥ 100üí≤\n\n'
                                 f'üíç  –í–µ—Å—ñ–ª—å–Ω—ñ —Ñ—ñ–ª—å–º–∏ - —î –∫—ñ–ª—å–∫–∞ –ø–∞–∫–µ—Ç—ñ–≤, –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∑–Ω—ñ–º–∞–ª—å–Ω–∏—Ö –≥–æ–¥–∏–Ω, –∫–∞–º–µ—Ä —Ç–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –∞–µ—Ä–æ–∑–π–æ–º–∫–∏\n\n'
                                 f'üíè  Love Story - 100üí≤\n\n'
                                 f'‚úà  –ê–µ—Ä–æ–∑–π–æ–º–∫–∞ - –≤—ñ–¥ 50üí≤\n\n'
                                 f'üë®‚Äçüíª  –ú–æ–Ω—Ç–∞–∂ - –≤—ñ–¥ 30üí≤\n\n', reply_markup=keyboard)


@dp.callback_query_handler(text_contains='contacts')
async def contacts(call: types.CallbackQuery):
    await call.message.edit_text(f'üì±–ú–æ–±.—Ç–µ–ª - +380975547372\n\n'
                                 f'üì∏Instagram - @tolian_ruzhytskyi\n\n'
                                 f'‚úâTelegram - @tolian_ruzhytskyi\n\n', reply_markup=keyboard)


@dp.callback_query_handler(text_contains='special_offers')
async def special_offers(call: types.CallbackQuery):
    await call.message.edit_text(f'–Ø —î –ø—Ä–∏–±—ñ—á–Ω–∏–∫–æ–º –∑–±–∞–ª–∞–Ω—Å–æ–≤–∞–Ω–æ–≥–æ –æ–±–º—ñ–Ω—É\n'
                                 f'–ø–æ—Å–ª—É–≥–∞–º–∏ –∞–±–æ –∂ —Ç–æ–≤–∞—Ä–∞–º–∏, —Ç–æ–º—É —è–∫—â–æ\n'
                                 f'—É –≤–∞—Å —î –≤–∏–≥—ñ–¥–Ω–∞ –±–∞—Ä—Ç–µ—Ä–Ω–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è,\n'
                                 f'—Ç–æ –¥–∑–≤–æ–Ω—ñ—Ç—å –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω—É, —â–æ\n'
                                 f'–≤–∫–∞–∑–∞–Ω–∏–π —É –º–µ–Ω—é "–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ñ –¥–∞–Ω—ñ üë•"\n', reply_markup=keyboard)


@dp.callback_query_handler(text_contains='reviews')
async def reviews(call: types.CallbackQuery):
    await call.message.edit_text('–ü–µ—Ä–µ–π–¥—ñ—Ç—å –ø–æ —Å–∏–ª—Ü—ñ —ñ –∑–∞–ª–∏—à—ñ—Ç—å –∫–æ–º–µ–Ω—Ç–∞—Ä', reply_markup=keyboard)


keyboard_for_example = InlineKeyboardMarkup()
klip = InlineKeyboardButton(text='–ö–ª—ñ–ø üé¨', callback_data="klip")
fashion = InlineKeyboardButton(text='Fashion üëó', callback_data="fashion")
promotional_videos = InlineKeyboardButton(text='–†–µ–∫–ª–∞–º–Ω—ñ –≤—ñ–¥–µ–æ üì¢', callback_data="promotional_videos")
wedding_videos = InlineKeyboardButton(text='–í–µ—Å—ñ–ª—å–Ω—ñ –≤—ñ–¥–µ–æ üíç', callback_data="wedding_videos")
love_story = InlineKeyboardButton(text='Love story üíè', callback_data="love_story")
aerovideo = InlineKeyboardButton(text='–ê–µ—Ä–æ–∑–π–æ–º–∫–∞ ‚úà', callback_data="aerovideo")
video_editing = InlineKeyboardButton(text='–ú–æ–Ω—Ç–∞–∂ üë®‚Äçüíª', callback_data="video_edition")
keyboard_for_example.add(klip, fashion, promotional_videos, wedding_videos, love_story, aerovideo, video_editing)


@dp.message_handler(commands=['example'])
async def message_before_example(message: types.Message):
    await message.reply('–í–∏ —É–≤—ã–π—à–ª–∏ –≤ –º–µ–Ω—é "/example"\n'
                        '–ù–∞—Ç–∏—Å–∫–∞—é—á–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –ø—ñ–¥ —Ü–∏–º —Ç–µ–∫—Å—Ç–æ–º –≤–∏ –≤–∏–±–∏—Ä–∞—î—Ç–µ\n'
                        '—Ç–∏–ø –≤—ñ–¥–µ–æ, —è–∫–µ –≤–∏ —Ö–æ—á–µ—Ç–µ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏', reply_markup=keyboard_for_example)


@dp.callback_query_handler(text_contains='klip')
async def clip(call: types.CallbackQuery):
    await asyncio.sleep(1)
    await types.ChatActions.upload_video()
    media = types.MediaGroup()
    media.attach_video(types.InputFile('example/video/üî•OVERWATCH FUNNY MOMENTS #3 –û–í–ï–†–í–û–¢–ß #SHORTS ‚ñ∫ –°–ú–ï–®–ù–´–ï –ú–û–ú–ï–ù–¢–´ –û–í–ï–†–í–ê–ß _ –®–û–†–¢–° _ –ö–û–†–û–¢–ö–ò–ï –í–ò–î–ï–û –Æ–¢–£–ë.mp4'))
    await call.message.reply_media_group(media=media)


@dp.callback_query_handler(text_contains='fashion')
async def fashion(call: types.CallbackQuery):
    await asyncio.sleep(1)
    await types.ChatActions.upload_video()
    media = types.MediaGroup()
    media.attach_video(types.InputFile('example/video/üî•OVERWATCH FUNNY MOMENTS #3 –û–í–ï–†–í–û–¢–ß #SHORTS ‚ñ∫ –°–ú–ï–®–ù–´–ï –ú–û–ú–ï–ù–¢–´ –û–í–ï–†–í–ê–ß _ –®–û–†–¢–° _ –ö–û–†–û–¢–ö–ò–ï –í–ò–î–ï–û –Æ–¢–£–ë.mp4'))
    await call.message.reply_media_group(media=media)


@dp.callback_query_handler(text_contains='promotional_videos')
async def promotional_videos(call: types.CallbackQuery):
    await asyncio.sleep(1)
    await types.ChatActions.upload_video()
    media = types.MediaGroup()
    media.attach_video(types.InputFile('example/video/üî•OVERWATCH FUNNY MOMENTS #3 –û–í–ï–†–í–û–¢–ß #SHORTS ‚ñ∫ –°–ú–ï–®–ù–´–ï –ú–û–ú–ï–ù–¢–´ –û–í–ï–†–í–ê–ß _ –®–û–†–¢–° _ –ö–û–†–û–¢–ö–ò–ï –í–ò–î–ï–û –Æ–¢–£–ë.mp4'))
    await call.message.reply_media_group(media=media)


@dp.callback_query_handler(text_contains='wedding_videos')
async def promotional_videos(call: types.CallbackQuery):
    await asyncio.sleep(1)
    await types.ChatActions.upload_video()
    media = types.MediaGroup()
    media.attach_video(types.InputFile('example/video/üî•OVERWATCH FUNNY MOMENTS #3 –û–í–ï–†–í–û–¢–ß #SHORTS ‚ñ∫ –°–ú–ï–®–ù–´–ï –ú–û–ú–ï–ù–¢–´ –û–í–ï–†–í–ê–ß _ –®–û–†–¢–° _ –ö–û–†–û–¢–ö–ò–ï –í–ò–î–ï–û –Æ–¢–£–ë.mp4'))
    await call.message.reply_media_group(media=media)


@dp.callback_query_handler(text_contains='love_story')
async def promotional_videos(call: types.CallbackQuery):
    await asyncio.sleep(1)
    await types.ChatActions.upload_video()
    media = types.MediaGroup()
    media.attach_video(types.InputFile('example/video/üî•OVERWATCH FUNNY MOMENTS #3 –û–í–ï–†–í–û–¢–ß #SHORTS ‚ñ∫ –°–ú–ï–®–ù–´–ï –ú–û–ú–ï–ù–¢–´ –û–í–ï–†–í–ê–ß _ –®–û–†–¢–° _ –ö–û–†–û–¢–ö–ò–ï –í–ò–î–ï–û –Æ–¢–£–ë.mp4'))
    await call.message.reply_media_group(media=media)


@dp.callback_query_handler(text_contains='love_story')
async def promotional_videos(call: types.CallbackQuery):
    await asyncio.sleep(1)
    await types.ChatActions.upload_video()
    media = types.MediaGroup()
    media.attach_video(types.InputFile('example/video/üî•OVERWATCH FUNNY MOMENTS #3 –û–í–ï–†–í–û–¢–ß #SHORTS ‚ñ∫ –°–ú–ï–®–ù–´–ï –ú–û–ú–ï–ù–¢–´ –û–í–ï–†–í–ê–ß _ –®–û–†–¢–° _ –ö–û–†–û–¢–ö–ò–ï –í–ò–î–ï–û –Æ–¢–£–ë.mp4'))
    await call.message.reply_media_group(media=media)


@dp.callback_query_handler(text_contains='aerovideo')
async def promotional_videos(call: types.CallbackQuery):
    await asyncio.sleep(1)
    await types.ChatActions.upload_video()
    media = types.MediaGroup()
    media.attach_video(types.InputFile('example/video/üî•OVERWATCH FUNNY MOMENTS #3 –û–í–ï–†–í–û–¢–ß #SHORTS ‚ñ∫ –°–ú–ï–®–ù–´–ï –ú–û–ú–ï–ù–¢–´ –û–í–ï–†–í–ê–ß _ –®–û–†–¢–° _ –ö–û–†–û–¢–ö–ò–ï –í–ò–î–ï–û –Æ–¢–£–ë.mp4'))
    await call.message.reply_media_group(media=media)


@dp.callback_query_handler(text_contains='video_edition')
async def promotional_videos(call: types.CallbackQuery):
    await asyncio.sleep(1)
    await types.ChatActions.upload_video()
    media = types.MediaGroup()
    media.attach_video(types.InputFile('example/video/üî•OVERWATCH FUNNY MOMENTS #3 –û–í–ï–†–í–û–¢–ß #SHORTS ‚ñ∫ –°–ú–ï–®–ù–´–ï –ú–û–ú–ï–ù–¢–´ –û–í–ï–†–í–ê–ß _ –®–û–†–¢–° _ –ö–û–†–û–¢–ö–ò–ï –í–ò–î–ï–û –Æ–¢–£–ë.mp4'))
    await call.message.reply_media_group(media=media)


@dp.errors_handler(exception=MessageNotModified)
async def message_not_modified_handler(update, error):
    return True

"""–¶–µ –Ω–∞–¥—Å–∏–ª–∞—î –≤—ñ–¥–µ–æ –≤ –±–æ—Ç–∞"""
# @dp.message_handler(text_contains='example_video')
# async def process_example_command(call: types.CallbackQuery):
#     await call.message.edit_text('–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –≤—ñ–¥–µ–æ, –ø—Ä–∏–∫–ª–∞–¥ —è–∫–æ–≥–æ –≤–∏ —Ö–æ—á–∏—Ç–µ –ø–æ–±–∞—á–∏—Ç–∏', reply_markup=keyboard)
#
#     await asyncio.sleep(1)
#
#     await types.ChatActions.upload_video()
#
#     media = types.MediaGroup()
#
#     media.attach_video(types.InputFile('example/video/advert.mp4'))
#
#     await call.message.reply_media_group(media=media)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)


